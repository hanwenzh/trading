using Model.Return;
using Model.Enum;
using MySQLSrv;
using Trade.Interface;
using System;
using System.Collections.Generic;
using System.ServiceModel.Activation;
using Model.Common;

namespace Trade.Service
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    public class Unit : Service, IUnit
    {
        public ResultUnit List()
        {
            List<Model.DB.Unit> lst = UnitDA.List();
            return new ResultUnit(lst);
        }

        public ResultBase List4Filter()
        {
            List<Model.Common.Base> lst = UnitDA.List4Filter();
            return new ResultBase(lst);
        }

        public ResultBase List4User()
        {
            List<Model.Common.Base> lst = UnitDA.List4User(user_id);
            return new ResultBase(lst);
        }

        public ResultBase List4Account(int account_id)
        {
            List<Model.Common.Base> lst = UnitDA.List4Account(account_id);
            return new ResultBase(lst);
        }

        public ResultLong Add(Model.DB.Unit model)
        {
            int id = 0;
            ApiResultEnum result = UnitDA.Add(model, ref id, user_id);
            return Result(result, id);
        }

        public Result Update(Model.DB.Unit model)
        {
            return Result(UnitDA.Update(model));
        }

        public Result UpdateStatus(Status model)
        {
            return Result(UnitDA.UpdateStatus(model));
        }

        public Result UpdateRatioFreezing(Model.DB.Unit model)
        {
            return Result(UnitDA.UpdateRatioFreezing(model));
        }

        public Result CapitalInOut(Model.DB.LogCapital model)
        {
            model.@operator = user_id;
            return Result(LogCapitalDA.Add(model));
        }

        public Result Delete(Model.DB.Unit model)
        {
            return Result(UnitDA.Delete(model, user_id));
        }
    }
}
