using Model.Return;
using Model.Enum;
using Model.DB;
using MySQLSrv;
using Trade.Interface;
using System;
using System.Collections.Generic;
using System.ServiceModel.Activation;
using Model.API;
using RedisSrv;
using System.Linq;

namespace Trade.Service
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    public class System : Service, ISystem
    {
        public ResultLogTrade ListLogTrade()
        {
            List<LogTrade> lst = LogTradeDA.List();
            int status_trade = TradeRA.GetInt("status_trade");
            if (status_trade == 1)
                lst.Last().state = "交易中";
            else if (status_trade == 2)
                lst.Last().state = "已暂停";
            return new ResultLogTrade(ApiResultEnum.Success, lst);
        }

        public Result UpdateStatusTrade(StatusTradeEnum status)
        {
            int status_trade = TradeRA.GetInt("status_trade");
            if (status_trade == 0)
            {
                if (status != StatusTradeEnum.Opening)
                    return Result(ApiResultEnum.Failed);

                //开盘
                if (!LogTradeDA.Open(UserRA.Get(user_id, "name")))
                    return Result(ApiResultEnum.Failed);
                TradeRA.SetInt("status_trade", (int)status);
            }
            else
            {
                if (status == StatusTradeEnum.Opening)
                    return Result(ApiResultEnum.Failed);
                else if (status == StatusTradeEnum.Recovery)
                    TradeRA.SetInt("status_trade", (int)StatusTradeEnum.Opening);
                else if (status == StatusTradeEnum.Pause)
                    TradeRA.SetInt("status_trade", (int)status);
                else
                {
                    //收盘
                    if (!LogTradeDA.Close(UserRA.Get(user_id, "name")))
                        return Result(ApiResultEnum.Failed);
                    TradeRA.SetInt("status_trade", (int)status);
                }
            }
            return Result(ApiResultEnum.Success);
        }

        public Result PositionTransfer(PositionTransfer model)
        {
            return Result(ApiResultEnum.Success);
        }
    }
}